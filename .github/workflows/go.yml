# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'
    - name: Build
      run: go build -v -o . ./...
    - name: Test
      run: go test -v ./...
     
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
    - name: Create or update service file
      run: |
        echo "Unit]
        Description=Echo Service
        After=network.target

        [Service]
        ExecStart=/home/ubuntu/actions-runner/_work/echo/echo/echo
        ExecReload=/home/ubuntu/actions-runner/_work/echo/echo/echo
        ExecStop=/home/ubuntu/actions-runner/_work/echo/echo/echo
        WorkingDirectory=/home/ubuntu/actions-runner/_work/echo/echo
        Restart=on-failure
        User=ubuntu
        Group=ubuntu
        StandardOutput=append:/var/log/echo.log
        StandardError=append:/var/log/echo.error.log

        [Install]
        WantedBy=multi-user.target | sudo tee /etc/systemd/system/echo.service
    - name: Reload systemd
      run: sudo systemctl daemon-reload
    - name: Enable service
      run: sudo systemctl enable echo.service
    - name: Restart service
      run: sudo systemctl restart echo.service
    - name: Check service status
      run: sudo systemctl is-active echo.service

